<UserControl x:Class="LeapfrogEditor.CompoundObjectUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LeapfrogEditor"
             xmlns:ZoomAndPan="clr-namespace:ZoomAndPan;assembly=ZoomAndPan"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="1000">
   <UserControl.Resources>
      <local:TextureOffsetXValueConverter x:Key="TextureOffsetXValueConverter" />
      <local:TextureOffsetYValueConverter x:Key="TextureOffsetYValueConverter" />
      <local:MultiRotatedVertexValueConverter x:Key="MultiRotatedVertexValueConverter" />
      <local:PreviousMultiRotatedVertexValueConverter x:Key="PreviousMultiRotatedVertexValueConverter" />
      <local:TextureCircleValueConverter x:Key="TextureCircleValueConverter" />
      <local:TexturePathValueConverter x:Key="TexturePathValueConverter" />
      <local:TextureRectValueConverter x:Key="TextureRectValueConverter" />
      <local:BoolToVisibilityValueConverter x:Key="BoolToVisibilityValueConverter" />
      <local:RadToDegValueConverter x:Key="RadToDegValueConverter" />
      <local:NegRadToDegValueConverter x:Key="NegRadToDegValueConverter" />
      <local:ZoomThicknessValueConverter x:Key="ZoomThicknessValueConverter" />
      <local:ZoomHandleSizeValueConverter x:Key="ZoomHandleSizeValueConverter" />
      <local:ZoomHandleTranslateValueConverter x:Key="ZoomHandleTranslateValueConverter" />
      <local:PointCollectionValueConverter x:Key="PointCollectionValueConverter" />
      <local:DebugDummyConverter x:Key="DebugDummyConverter" />
      <DataTemplate DataType="{x:Type local:LfScalableTexturePolygonViewModel}">
         <Grid>
            <Polygon 
               x:Name="stpvm"
               StrokeThickness="0"
               Points="{Binding Points}"
				   MouseUp="General_MouseUp"
               MouseWheel="Shape_Rotate"
               >
               <Polygon.Fill>
                  <ImageBrush
                     Viewport="{Binding Converter={StaticResource TextureRectValueConverter}}"
                     ViewportUnits="Absolute"
                     TileMode="Tile"
                     Stretch="None"
                     AlignmentX="Center"
                     AlignmentY="Center" 
                     ImageSource="{Binding Texture, Converter={StaticResource TexturePathValueConverter}}" />
               </Polygon.Fill>
               <Polygon.RenderTransform>
                  <TransformGroup>
                     <RotateTransform x:Name="d1"
                        Angle="{Binding Angle, Converter={StaticResource NegRadToDegValueConverter}}"
                        CenterX="0"
                        CenterY="0"
                     />
                  </TransformGroup>
               </Polygon.RenderTransform>
            </Polygon>
            <ItemsControl 
               Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityValueConverter}}"
               ItemsSource="{Binding PointVms}" >
               <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                     <Canvas/>
                  </ItemsPanelTemplate>
               </ItemsControl.ItemsPanel>
               <ItemsControl.ItemTemplate>
                  <DataTemplate>
                     <Grid>
                        <Line
                           StrokeThickness="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomThicknessValueConverter}}"
                           Stroke="DarkBlue"
                           MouseUp="General_MouseUp"
                           >
                           <Line.X1>
                              <MultiBinding Converter="{StaticResource MultiRotatedVertexValueConverter}" ConverterParameter="x">
                                 <Binding Path="PosX" />
                                 <Binding />
                              </MultiBinding>
                           </Line.X1>
                           <Line.Y1>
                              <MultiBinding Converter="{StaticResource MultiRotatedVertexValueConverter}" ConverterParameter="y">
                                 <Binding Path="PosY" />
                                 <Binding />
                              </MultiBinding>
                           </Line.Y1>
                           <Line.X2>
                              <MultiBinding Converter="{StaticResource PreviousMultiRotatedVertexValueConverter}" ConverterParameter="x">
                                 <Binding Path="PosX" />
                                 <Binding />
                              </MultiBinding>
                           </Line.X2>
                           <Line.Y2>
                              <MultiBinding Converter="{StaticResource PreviousMultiRotatedVertexValueConverter}" ConverterParameter="y">
                                 <Binding Path="PosY" />
                                 <Binding />
                              </MultiBinding>
                           </Line.Y2>
                           <!--<Line.Style>
                              <Style TargetType="{x:Type Line}">
                                 <Style.Triggers>
                                    <DataTrigger 
                                         Binding="{Binding 
                                              RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, 
                                              Path=(ItemsControl.AlternationIndex)}" 
                                          Value="0">
                                             <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                 </Style.Triggers>
                              </Style>
                           </Line.Style>-->
                        </Line>
                     </Grid>
                  </DataTemplate>
               </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Rectangle 
               Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityValueConverter}}"
               Canvas.Left="0"
               Canvas.Top="0" 
               Width="{Binding BoundingBox.Width}"
               Height="{Binding BoundingBox.Height}"
               StrokeThickness="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomThicknessValueConverter}}"
               Stroke="Gray"
               Cursor="Hand"
               MouseDown="General_MouseDown"
			      MouseUp="General_MouseUp"
			      MouseMove="General_MouseMove">
               <Rectangle.RenderTransform>
                  <TranslateTransform 
                     X="{Binding BoundingBox.Left}" 
                     Y="{Binding BoundingBox.Top}" 
                  />
               </Rectangle.RenderTransform>
            </Rectangle>
            <ItemsControl ItemsSource="{Binding PointVms}"
               Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityValueConverter}}"
                          >
               <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                     <Canvas/>
                  </ItemsPanelTemplate>
               </ItemsControl.ItemsPanel>
               <ItemsControl.ItemContainerStyle>
                  <Style TargetType="ContentPresenter">
                     <Setter Property="Canvas.Left">
                        <Setter.Value>
                           <MultiBinding Converter="{StaticResource MultiRotatedVertexValueConverter}" ConverterParameter="x">
                              <Binding Path="PosX" />
                              <Binding />
                           </MultiBinding>
                        </Setter.Value>
                     </Setter>
                     <Setter Property="Canvas.Top">
                        <Setter.Value>
                           <MultiBinding Converter="{StaticResource MultiRotatedVertexValueConverter}" ConverterParameter="y">
                              <Binding Path="PosY" />
                              <Binding />
                           </MultiBinding>
                        </Setter.Value>
                     </Setter>
                  </Style>
               </ItemsControl.ItemContainerStyle>
               <ItemsControl.ItemTemplate>
                  <DataTemplate>
                     <Grid>
                        <Rectangle
                           Width="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomHandleSizeValueConverter}}"
                           Height="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomHandleSizeValueConverter}}"
							      Fill="Gray"
                           StrokeThickness="2"
                           Cursor="Hand"                   
                           MouseDown="General_MouseDown"
					            MouseUp="General_MouseUp"
					            MouseMove="General_MouseMove" >
                           <Rectangle.Style>
                              <Style TargetType="{x:Type Rectangle}" >
                                 <Setter Property="Stroke" Value="Gray"/>
                                 <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                       <Setter Property="Stroke" Value="Black" />
                                    </DataTrigger>
                                 </Style.Triggers>
                              </Style>
                           </Rectangle.Style>
                           <Rectangle.RenderTransform>
                              <TranslateTransform 
                                 X="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomHandleTranslateValueConverter}}"
                                 Y="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomHandleTranslateValueConverter}}"
                              />
                           </Rectangle.RenderTransform>
                        </Rectangle>
                     </Grid>
                  </DataTemplate>
               </ItemsControl.ItemTemplate>
            </ItemsControl>
         </Grid>
      </DataTemplate>
      <DataTemplate DataType="{x:Type local:LfStaticBoxedSpritePolygonViewModel}">
         <Grid>
            <!-- The Image is the Box texture of shape.l This is translated so
            the center of the image is placed at the position of the shape. It
            is rotated (render transform) according to the angle of the shape. -->
            <Image
               Canvas.Left="{Binding PosX}"
               Canvas.Top="{Binding PosY}"
               Width="{Binding Width}"
               Height="{Binding Height}"
               Source="{Binding Texture, Converter={StaticResource TexturePathValueConverter}}" 
				   MouseUp="General_MouseUp"
               MouseWheel="Shape_Rotate"
               >
               <Image.RenderTransform>
                  <TransformGroup>
                     <TranslateTransform x:Name="d2"
                        X="{Binding Converter={StaticResource TextureOffsetXValueConverter}}" 
                        Y="{Binding Converter={StaticResource TextureOffsetYValueConverter}}" 
                     />
                     <RotateTransform x:Name="d1"
                        Angle="{Binding Angle, Converter={StaticResource NegRadToDegValueConverter}}"
                        CenterX="0"
                        CenterY="0"
                     />
                  </TransformGroup>
               </Image.RenderTransform>
            </Image>
            <!-- Below is the lines between the vertices of the polygon. The lines are
            drawn between the vertices of the polygon and they are rotated acc to the angle-->
            <ItemsControl 
               Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityValueConverter}}"
               ItemsSource="{Binding PointVms}" 
               >
               <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                     <Canvas/>
                  </ItemsPanelTemplate>
               </ItemsControl.ItemsPanel>
               <ItemsControl.ItemTemplate>
                  <DataTemplate>
                     <Grid>
                        <Line
                           StrokeThickness="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomThicknessValueConverter}}"
                           Stroke="DarkBlue"
							      Cursor="Hand"
                           MouseUp="General_MouseUp"
                           >
                           <Line.X1>
                              <MultiBinding Converter="{StaticResource MultiRotatedVertexValueConverter}" ConverterParameter="x">
                                 <Binding Path="PosX" />
                                 <Binding />
                              </MultiBinding>
                           </Line.X1>
                           <Line.Y1>
                              <MultiBinding Converter="{StaticResource MultiRotatedVertexValueConverter}" ConverterParameter="y">
                                 <Binding Path="PosY" />
                                 <Binding />
                              </MultiBinding>
                           </Line.Y1>
                           <Line.X2>
                              <MultiBinding Converter="{StaticResource PreviousMultiRotatedVertexValueConverter}" ConverterParameter="x">
                                 <Binding Path="PosX" />
                                 <Binding />
                              </MultiBinding>
                           </Line.X2>
                           <Line.Y2>
                              <MultiBinding Converter="{StaticResource PreviousMultiRotatedVertexValueConverter}" ConverterParameter="y">
                                 <Binding Path="PosY" />
                                 <Binding />
                              </MultiBinding>
                           </Line.Y2>
                           <!--<Line.Style>
                              <Style TargetType="{x:Type Line}">
                                 <Style.Triggers>
                                    <DataTrigger 
                                         Binding="{Binding 
                                              RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, 
                                              Path=(ItemsControl.AlternationIndex)}" 
                                          Value="0">
                                       <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                 </Style.Triggers>
                              </Style>
                           </Line.Style>-->
                        </Line>
                     </Grid>
                  </DataTemplate>
               </ItemsControl.ItemTemplate>
            </ItemsControl>
            <!-- Below is the selection bounding box that can be used to move the shape. The 
            Bounding box is resized to the outer bounds of the rotated shape and therefore
            this rectangle is always aligned with the screen. The render transform is required
            since the objects cant be placed in negative positions of the canvas (apparently) -->
            <Rectangle 
               Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityValueConverter}}"
               Canvas.Left="0"
               Canvas.Top="0" 
               Width="{Binding BoundingBox.Width}"
               Height="{Binding BoundingBox.Height}"
               StrokeThickness="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomThicknessValueConverter}}"
               Stroke="Gray"
               Cursor="Hand"
               MouseDown="General_MouseDown"
			      MouseUp="General_MouseUp"
			      MouseMove="General_MouseMove">
               <Rectangle.RenderTransform>
                  <TranslateTransform  x:Name="d"
                     X="{Binding BoundingBox.Left}" 
                     Y="{Binding BoundingBox.Top}" 
                  />
               </Rectangle.RenderTransform>
            </Rectangle>
            <!-- Below square handles of each vertex of the polygon. They should be placed
            with rotating vertices (using a ValueConverter) and when dragged the dragging vector
            should be re-rotated to local coordinates. -->
            <ItemsControl ItemsSource="{Binding PointVms}"
               Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityValueConverter}}"
               >
               <ItemsControl.ItemsPanel>
                  <ItemsPanelTemplate>
                     <Canvas/>
                  </ItemsPanelTemplate>
               </ItemsControl.ItemsPanel>
               <ItemsControl.ItemContainerStyle>
                  <Style TargetType="ContentPresenter">
                     <Setter Property="Canvas.Left">
                        <Setter.Value>
                           <MultiBinding Converter="{StaticResource MultiRotatedVertexValueConverter}" ConverterParameter="x">
                              <Binding Path="PosX" />
                              <Binding />
                           </MultiBinding>
                        </Setter.Value>
                     </Setter>
                     <Setter Property="Canvas.Top">
                        <Setter.Value>
                           <MultiBinding Converter="{StaticResource MultiRotatedVertexValueConverter}" ConverterParameter="y">
                              <Binding Path="PosY" />
                              <Binding />
                           </MultiBinding>
                        </Setter.Value>
                     </Setter>
                  </Style>
               </ItemsControl.ItemContainerStyle>
               <ItemsControl.ItemTemplate>
                  <DataTemplate>
                     <Grid>
                        <Rectangle
                           Width="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomHandleSizeValueConverter}}"
                           Height="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomHandleSizeValueConverter}}"
							      Fill="Gray"
                           StrokeThickness="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomThicknessValueConverter}}"
							      Cursor="Hand"                   
                           MouseDown="General_MouseDown"
					            MouseUp="General_MouseUp"
					            MouseMove="General_MouseMove" >
                           <Rectangle.Style>
                              <Style TargetType="{x:Type Rectangle}" >
                                 <Setter Property="Stroke" Value="Gray"/>
                                 <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                       <Setter Property="Stroke" Value="Black" />
                                    </DataTrigger>
                                 </Style.Triggers>
                              </Style>
                           </Rectangle.Style>
                           <Rectangle.RenderTransform>
                              <TranslateTransform  
                                 X="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomHandleTranslateValueConverter}}"
                                 Y="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomHandleTranslateValueConverter}}"
                              />
                           </Rectangle.RenderTransform>
                        </Rectangle>
                     </Grid>
                  </DataTemplate>
               </ItemsControl.ItemTemplate>
            </ItemsControl>
         </Grid>
      </DataTemplate>
      <DataTemplate DataType="{x:Type local:LfStaticBoxViewModel}">
         <Grid>
            <Image
               Canvas.Left="{Binding PosX}"
               Canvas.Top="{Binding PosY}"
               Width="{Binding Width}"
               Height="{Binding Height}"
               Source="{Binding Texture, Converter={StaticResource TexturePathValueConverter}}"
               MouseUp="General_MouseUp"
               >
               <Image.RenderTransform>
                  <TranslateTransform 
                  X="{Binding Converter={StaticResource TextureOffsetXValueConverter}}" 
                  Y="{Binding Converter={StaticResource TextureOffsetYValueConverter}}" 
                  />
               </Image.RenderTransform>
            </Image>
            <Rectangle 
               Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityValueConverter}}"
               Canvas.Left="{Binding BoundingBox.Left}"
               Canvas.Top="{Binding BoundingBox.Top}" 
               Width="{Binding BoundingBox.Width}"
               Height="{Binding BoundingBox.Height}"
               StrokeThickness="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomThicknessValueConverter}}"
               Stroke="Gray"
               Cursor="Hand"
               MouseDown="General_MouseDown"
			      MouseUp="General_MouseUp"
			      MouseMove="General_MouseMove">
               <Rectangle.RenderTransform>
                  <TranslateTransform 
                  X="{Binding Converter={StaticResource TextureOffsetXValueConverter}}" 
                  Y="{Binding Converter={StaticResource TextureOffsetYValueConverter}}" 
                  />
               </Rectangle.RenderTransform>
            </Rectangle>
         </Grid>
      </DataTemplate>
   </UserControl.Resources>
   <Canvas
      x:Name="content" >
      <ItemsControl ItemsSource="{Binding Shapes}">
         <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
               <Canvas/>
            </ItemsPanelTemplate>
         </ItemsControl.ItemsPanel>
         <ItemsControl.ItemContainerStyle>
            <Style TargetType="ContentPresenter">
               <Setter Property="Canvas.Left" Value="{Binding PosX}"/>
               <Setter Property="Canvas.Top" Value="{Binding PosY}"/>
            </Style>
         </ItemsControl.ItemContainerStyle>
      </ItemsControl>
      <ItemsControl ItemsSource="{Binding ChildObjects}">
         <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
               <Canvas/>
            </ItemsPanelTemplate>
         </ItemsControl.ItemsPanel>
         <ItemsControl.ItemContainerStyle>
            <Style TargetType="ContentPresenter">
               <Setter Property="Canvas.Left" Value="{Binding PosX}"/>
               <Setter Property="Canvas.Top" Value="{Binding PosY}"/>
            </Style>
         </ItemsControl.ItemContainerStyle>
      </ItemsControl>
      <Rectangle 
         Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityValueConverter}}"
         Canvas.Left="{Binding BoundingBox.Left}"
         Canvas.Top="{Binding BoundingBox.Top}" 
         Width="{Binding BoundingBox.Width}"
         Height="{Binding BoundingBox.Height}"
         StrokeThickness="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomThicknessValueConverter}}"
         Stroke="DarkBlue"
         MouseDown="General_MouseDown"
			MouseUp="General_MouseUp"
			MouseMove="General_MouseMove" />
   </Canvas>
            
</UserControl>
