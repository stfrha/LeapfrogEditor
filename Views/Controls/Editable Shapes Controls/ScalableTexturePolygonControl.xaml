<UserControl x:Class="LeapfrogEditor.ScalableTexturePolygonControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LeapfrogEditor"
             xmlns:ZoomAndPan="clr-namespace:ZoomAndPan;assembly=ZoomAndPan"
             x:Name="root"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
   <UserControl.Resources>
      <local:TexturePathValueConverter x:Key="TexturePathValueConverter" />
      <local:TextureRectMultiValueConverter x:Key="TextureRectMultiValueConverter" />
      <local:NegRadToDegValueConverter x:Key="NegRadToDegValueConverter" />
      <local:BoolToVisibilityValueConverter x:Key="BoolToVisibilityValueConverter" />
      <local:ZoomThicknessValueConverter x:Key="ZoomThicknessValueConverter" />
      <local:ZoomHandleSizeValueConverter x:Key="ZoomHandleSizeValueConverter" />
      <local:ZoomHandleTranslateValueConverter x:Key="ZoomHandleTranslateValueConverter" />
      <local:MultiRotatedVertexValueConverter x:Key="MultiRotatedVertexValueConverter" />
      <local:PreviousMultiRotatedVertexValueConverter x:Key="PreviousMultiRotatedVertexValueConverter" />
   </UserControl.Resources>
   <Grid>
      <Polygon 
               x:Name="stpvm"
               StrokeThickness="0"
               Points="{Binding Points}"
				   MouseDown="Shape_MouseDown"
				   MouseUp="Shape_MouseUp"
               >
         <Polygon.Fill>
            <ImageBrush
                     ViewportUnits="Absolute"
                     TileMode="Tile"
                     Stretch="None"
                     AlignmentX="Center"
                     AlignmentY="Center" 
                     ImageSource="{Binding Texture, Converter={StaticResource TexturePathValueConverter}}" >
               <ImageBrush.Viewport>
                  <MultiBinding Converter="{StaticResource TextureRectMultiValueConverter}" >
                     <Binding Path="TextureOffsetX" />
                     <Binding Path="TextureOffsetY" />
                     <Binding Path="TextureWidth" />
                     <Binding Path="TextureHeight" />
                  </MultiBinding>
               </ImageBrush.Viewport>
            </ImageBrush>
         </Polygon.Fill>
         <Polygon.RenderTransform>
            <TransformGroup>
               <RotateTransform x:Name="d1"
                        Angle="{Binding Angle, Converter={StaticResource NegRadToDegValueConverter}}"
                        CenterX="0"
                        CenterY="0"
                     />
            </TransformGroup>
         </Polygon.RenderTransform>
      </Polygon>
      <!-- Below is the lines between the vertices of each triangles of the polygon. The lines are
            drawn between the vertices of the triangles and they are rotated acc to the angle-->
      <ItemsControl ItemsSource="{Binding Triangles}">
         <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
               <Canvas/>
            </ItemsPanelTemplate>
         </ItemsControl.ItemsPanel>
      </ItemsControl>
      <!-- Below is the lines between the vertices of the polygon. The lines are
            drawn between the vertices of the polygon and they are rotated acc to the angle-->
      <ItemsControl 
               Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityValueConverter}}"
               ItemsSource="{Binding PointVms}" >
         <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
               <Canvas/>
            </ItemsPanelTemplate>
         </ItemsControl.ItemsPanel>
         <ItemsControl.ItemTemplate>
            <DataTemplate>
               <Canvas>
                  <Line
                           StrokeThickness="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomThicknessValueConverter}}"
                           Stroke="DarkBlue"
                           MouseDown="PolygonBorder_MouseDown"
			                  MouseUp="PolygonBorder_MouseUp"
			                  MouseMove="PolygonBorder_MouseMove"
                           Cursor="ScrollAll"
                           KeyDown="LineCursorKeyDown"
                           KeyUp="LineCursorKeyUp"
                           >
                     <Line.X1>
                        <MultiBinding Converter="{StaticResource MultiRotatedVertexValueConverter}" ConverterParameter="x">
                           <Binding Path="PosX" />
                           <Binding />
                        </MultiBinding>
                     </Line.X1>
                     <Line.Y1>
                        <MultiBinding Converter="{StaticResource MultiRotatedVertexValueConverter}" ConverterParameter="y">
                           <Binding Path="PosY" />
                           <Binding />
                        </MultiBinding>
                     </Line.Y1>
                     <Line.X2>
                        <MultiBinding Converter="{StaticResource PreviousMultiRotatedVertexValueConverter}" ConverterParameter="x">
                           <Binding Path="PosX" />
                           <Binding />
                        </MultiBinding>
                     </Line.X2>
                     <Line.Y2>
                        <MultiBinding Converter="{StaticResource PreviousMultiRotatedVertexValueConverter}" ConverterParameter="y">
                           <Binding Path="PosY" />
                           <Binding />
                        </MultiBinding>
                     </Line.Y2>
                  </Line>
               </Canvas>
            </DataTemplate>
         </ItemsControl.ItemTemplate>
      </ItemsControl>
      <!-- Below square handles of each vertex of the polygon. They should be placed
            with rotating vertices (using a ValueConverter) and when dragged the dragging vector
            should be re-rotated to local coordinates. -->
      <ItemsControl ItemsSource="{Binding PointVms}"
               Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityValueConverter}}"
                          >
         <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
               <Canvas/>
            </ItemsPanelTemplate>
         </ItemsControl.ItemsPanel>
         <ItemsControl.ItemContainerStyle>
            <Style TargetType="ContentPresenter">
               <Setter Property="Canvas.Left">
                  <Setter.Value>
                     <MultiBinding Converter="{StaticResource MultiRotatedVertexValueConverter}" ConverterParameter="x">
                        <Binding Path="PosX" />
                        <Binding />
                     </MultiBinding>
                  </Setter.Value>
               </Setter>
               <Setter Property="Canvas.Top">
                  <Setter.Value>
                     <MultiBinding Converter="{StaticResource MultiRotatedVertexValueConverter}" ConverterParameter="y">
                        <Binding Path="PosY" />
                        <Binding />
                     </MultiBinding>
                  </Setter.Value>
               </Setter>
            </Style>
         </ItemsControl.ItemContainerStyle>
         <ItemsControl.ItemTemplate>
            <DataTemplate>
               <Canvas>
                  <Rectangle
                           Width="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomHandleSizeValueConverter}}"
                           Height="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomHandleSizeValueConverter}}"
                           Stroke="Black"
                           StrokeThickness="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomThicknessValueConverter}}"
                           MouseDown="DragablePoint_MouseDown"
					            MouseUp="DragablePoint_MouseUp"
					            MouseMove="DragablePoint_MouseMove" 
                           Cursor="ScrollAll"
                           >
                     <Rectangle.Style>
                        <Style TargetType="{x:Type Rectangle}" >
                           <Setter Property="Fill" Value="White"/>
                           <Style.Triggers>
                              <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                 <Setter Property="Fill" Value="Gray" />
                              </DataTrigger>
                           </Style.Triggers>
                        </Style>
                     </Rectangle.Style>
                     <Rectangle.RenderTransform>
                        <TranslateTransform 
                                 X="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomHandleTranslateValueConverter}}"
                                 Y="{Binding ContentScale, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ZoomAndPan:ZoomAndPanControl}}, Converter={StaticResource ZoomHandleTranslateValueConverter}}"
                              />
                     </Rectangle.RenderTransform>
                  </Rectangle>
               </Canvas>
            </DataTemplate>
         </ItemsControl.ItemTemplate>
      </ItemsControl>
   </Grid>
</UserControl>
